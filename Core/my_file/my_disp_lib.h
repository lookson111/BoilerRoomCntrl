/*
 * my_disp_lib.h
 *
 *  Created on: May 31, 2020
 *      Author: Rinat
 */

#ifndef MY_FILE_MY_DISP_LIB_H_
#define MY_FILE_MY_DISP_LIB_H_

#include "stm32f1xx_hal.h"
#include "cmsis_os.h"
#include "main.h"
#include "..\ili9341\fonts.h"

#define MENUCOUNTPARAM 11  //8+3
enum {
	menuDHT22_1_temp,
	menuDHT22_1_humd,
	menuDHT22_2_temp,
	menuDHT22_2_humd,
	menuNull1,
	menuTRez_1,
	menuTRez_2,
	menuTRez_3,
	menuTRez_4,
	menuNull2,
	menuPres_1,
	menuPres_2,
	menuWtrCounter, // счетчик воды
	menuPWMTermRez,
	menuRelHeatingHome,
	menuRelWtrPompHome,
	menuRelPompHeatSys,
	menuRelCPHotWater,
	menuRelCPHeatSys,
	menuRelValveWater,
	menuCountElements
};

enum {
	menuPNull,
	menuPNull1,
	menuPNull2,
	menuPNull3,
	menuPNull4,
	menuPNull5,
	menuPNull6,
	menuPNull7,
	menuPNull8,
	menuPNull9,
	menuPNull10,
	menuPNull11,
	menuPNull12,
	menuPNull13,
	menuPNull14,
	menuPNull15,
	menuPCountElements
};

enum {
	titleData,
	titlePiont,
	titleCountElements
};

static const char str_title[titleCountElements][13] = {
		{0xc4, 0xe0, 0xed, 0xed, 0xfb, 0xe5, 0x00}, // Данные
		{0xd3, 0xf1, 0xf2, 0xe0, 0xe2, 0xea, 0xe8, 0x00} // Уставки
};

static const char str_menu[menuCountElements][17] =
	{	{0xd3, 0xeb, 0xe8, 0xf6, 0xe0, 0x2c, 0x20, 0xd1, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, // Улица, С
		{0xd3, 0xeb, 0xe8, 0xf6, 0xe0, 0x2c, 0x20, 0x52, 0x48, 0x20, 0x25, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, // Улица, RH %
	  {0xc1, 0xee, 0xe9, 0xeb, 0xe5, 0xf0, 0xed, 0xe0, 0xff, 0x2c, 0x20, 0xd1, 0x20, 0x20, 0x20, 0x20, 0x00}, // Бойлерная, С
		{0xc1, 0xee, 0xe9, 0xeb, 0xe5, 0xf0, 0xed, 0xe0, 0xff, 0x2c, 0x20, 0x52, 0x48, 0x20, 0x25, 0x20, 0x00}, // Бойлерная, RH %
		{0xd2, 0xe5, 0xec, 0xef, 0xe5, 0xf0, 0xe0, 0xf2, 0xf3, 0xf0, 0xe0, 0x20, 0xe2, 0xee, 0xe4, 0xfb, 0x00}, // Температура воды
		{0x20, 0x20, 0xc4, 0xee, 0x20, 0xea, 0xee, 0xf2, 0xeb, 0xe0, 0x2c, 0x20, 0xd1, 0x20, 0x20, 0x20, 0x00}, //   До котла
	  {0x20, 0x20, 0xcf, 0xee, 0xf1, 0xeb, 0xe5, 0x20, 0xea, 0xee, 0xf2, 0xeb, 0xe0, 0x2c, 0x20, 0xd1, 0x00}, //   После котла
		{0x20, 0x20, 0xc3, 0xee, 0xf0, 0xff, 0xf7, 0xe0, 0xff, 0x2c, 0x20, 0xd1, 0x20, 0x20, 0x20, 0x20, 0x00}, //   Горячая, С
	  {0x20, 0x20, 0xd5, 0xee, 0xeb, 0xee, 0xe4, 0xed, 0xe0, 0xff, 0x2c, 0x20, 0xd1, 0x20, 0x20, 0x20, 0x00}, //   Холодная, С
		{0xc4, 0xe0, 0xe2, 0xeb, 0xe5, 0xed, 0xe8, 0xe5, 0x2c, 0x20, 0xe1, 0xe0, 0xf0, 0x20, 0x20, 0x20, 0x00}, // Давление, бар
		{0x20, 0x20, 0xce, 0xf2, 0xee, 0xef, 0xeb, 0xe5, 0xed, 0xe8, 0xe5, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, // 	 Отопление
	 	{0x20, 0x20, 0xc2, 0xee, 0xe4, 0xe0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, // 	 Вода
		{0xd1, 0xf7, 0xe5, 0xf2, 0xf7, 0xe8, 0xea, 0x20, 0xe2, 0xee, 0xe4, 0xfb, 0x20, 0x20, 0x20, 0x20, 0x00}, // Счетчик воды
		{0xd2, 0xe5, 0xec, 0xef, 0x2e, 0xe4, 0xeb, 0xff, 0x20, 0xea, 0xee, 0xf2, 0xeb, 0xe0, 0x2c, 0xd1, 0x00}, // Темп.для котла,С
		{0xca, 0xee, 0xf2, 0xe5, 0xeb, 0x2c, 0x20, 0xee, 0xf2, 0xee, 0xef, 0xeb, 0xe5, 0xed, 0xe8, 0xe5, 0x00}, // Котел, отопление
		{0xcd, 0xe0, 0xf1, 0xee, 0xf1, 0x20, 0xe2, 0xee, 0xe4, 0xe0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, // Насос вода
		{0xcd, 0xe0, 0xf1, 0xee, 0xf1, 0x20, 0xee, 0xf2, 0xee, 0xef, 0xeb, 0x2e, 0x20, 0x20, 0x20, 0x20, 0x00}, // Насос отопл.
		{0xd6, 0xe8, 0xf0, 0xea, 0x2e, 0xed, 0xe0, 0xf1, 0x2e, 0xe3, 0x2e, 0x20, 0xe2, 0xee, 0xe4, 0xe0, 0x00}, // Цирк.нас.г. вода
	  {0xd6, 0xe8, 0xf0, 0xea, 0x2e, 0xed, 0xe0, 0xf1, 0x2e, 0xee, 0xf2, 0xee, 0xef, 0xeb, 0x2e, 0x20, 0x00}, // Цирк.нас.отопл.
		{0xca, 0xeb, 0xe0, 0xef, 0xe0, 0xed, 0x20, 0xe2, 0xee, 0xe4, 0xe0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, // Клапан вода
	};
static const char str_menu_point[menuPCountElements][17] =
	{	{0xcd, 0xe0, 0xf1, 0xee, 0xf1, 0x20, 0xee, 0xf2, 0xee, 0xef, 0xeb, 0xe5, 0xed, 0xe8, 0xff, 0x20, 0x00}, // Насос отопления
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
	};

static const char str_menu_point_arg[menuPCountElements*MENUCOUNTPARAM][17] = {
		// Параметры насоса отопления
		{0xcc, 0xe8, 0xed, 0x2e, 0x20, 0xe4, 0xe0, 0xe2, 0xeb, 0xe5, 0xed, 0xe8, 0xe5, 0x20, 0x20, 0x20, 0x00}, // Мин. давление
		{0xcc, 0xe0, 0xea, 0xf1, 0x2e, 0x20, 0xe4, 0xe0, 0xe2, 0xeb, 0xe5, 0xed, 0xe8, 0xe5, 0x20, 0x20, 0x00}, // Макс. давление
		{0xcc, 0xe8, 0xed, 0x2e, 0x20, 0xed, 0xe0, 0xef, 0xf0, 0xff, 0xe6, 0xe5, 0xed, 0xe8, 0xe5, 0x20, 0x00}, // Мин. напряжение
		{0xcc, 0xe0, 0xea, 0xf1, 0x2e, 0xed, 0xe0, 0xef, 0xf0, 0xff, 0xe6, 0xe5, 0xed, 0xe8, 0xe5, 0x20, 0x00}, // Макс.напряжение
		{0xcc, 0xe8, 0xed, 0x2e, 0xe4, 0xe0, 0xe2, 0xeb, 0x2e, 0xe2, 0x20, 0xf1, 0xe5, 0xea, 0x20, 0x20, 0x00}, // Мин.давл.в сек
		{0xc4, 0xe5, 0xeb, 0xfc, 0xf2, 0x20, 0xed, 0xe0, 0xef, 0xf0, 0xff, 0xe6, 0x20, 0x20, 0x20, 0x20, 0x00}, // Дельт напряж
		{0xcb, 0xe0, 0xe3, 0x20, 0xec, 0xe8, 0xed, 0x20, 0xe1, 0xe0, 0xf0, 0x2f, 0xf1, 0x20, 0x20, 0x20, 0x00}, // Лаг мин бар/с
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //

		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //

		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //

		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //

		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
		{0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}, //
};

static const char str_on[]				= {0xc2, 0xea, 0xeb, 0x2e, 0x20, 0x20, 0x00}; // Вкл.
static const char str_off[]				= {0xce, 0xf2, 0xea, 0xeb, 0x2e, 0x20, 0x00}; // Откл.
static const char str_clear[]			= {0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00}; //



char str_menu_values[menuCountElements][7];
char str_menu_values_point[menuPCountElements][7];

typedef struct {
	char disp_znak[2];
	char humad[7];
	char time[10];
	char fl_res_menu;
	char title_line;
	char diap_min;
	char lines_max;
	char diap_max;
	char menu_data;
	char menuCountEl;
	char pwr_on;
	short clrRectLeft;
	short clrRectRight;
	short clrWordsLf;
	short clrWordsRt;
	char line;
	char b_enter_line;
	int count;
	uint32_t pwm_tmp;
} stDispMenu;

stDispMenu dm;
void disp_init (stDispMenu *dm);
void disp_time_view(stDispMenu *dm, RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, RTC_DateTypeDef *sDate);
short disp_out_lines(stDispMenu *dm, FontDef font);
short disp_curs_view(stDispMenu *dm, FontDef font);
void disp_button_press(stDispMenu *dm);
void disp_point_edit (stDispMenu *dm);


#endif /* MY_FILE_MY_DISP_LIB_H_ */
